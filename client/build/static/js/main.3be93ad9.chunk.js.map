{"version":3,"sources":["assets/color/logo.jpg","assets/spinner.gif","utils/queries.js","utils/helpers.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","components/ProductItem/index.js","components/ProductList/index.js","components/CategoryMenu/index.js","pages/Items.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","CartItem","item","className","src","image","alt","name","price","placeholder","onChange","target","parseInt","role","aria-label","onClick","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","require","config","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","data","toggleCart","useEffect","then","res","redirectToCheckout","sessionId","checkout","session","a","getCart","key","sum","forEach","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","images","url","Home","width","height","slideDuration","autoPlay","ProductItem","to","itemInCart","find","cartItem","ProductList","useQuery","loading","category","quantity","spinner","CategoryMenu","categoryData","id","Items","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","backgroundImage","Logo","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3be93ad9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.655c927f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('duckeggbakery', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/orderHistory');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nrequire('dotenv').config();\nconst stripePromise = loadStripe('pk_live_51KYbDeLy6UgjmXYo6t9P9l9GBNrqD9oquWKTnTl5EC4hiKgMZcPHvNIkTE88Q7Lycbyk5ZVBJfeNb6bSCbUA83qe005ndjaMtv');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          \n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport Cart from \"../components/Cart\";\nimport SimpleImageSlider from \"react-simple-image-slider\";\n\nconst images = [\n  { url: \"images/logo.jpg\"},\n  { url: \"images/Uconn.jpg\" },\n  { url: \"images/baby.jpg\"},\n  { url: \"images/beach.jpg\" },\n  { url: \"images/beachhats.jpg\" },\n  { url: \"images/Birthday1.jpg\"},\n  { url: \"images/Christmas.jpg\" },\n  { url: \"images/ChristmasCake.jpg\" },\n  { url: \"images/ChristmasCookies.jpg\"},\n  { url: \"images/cincodemayo.jpg\" },\n  { url: \"images/CinnamonBread.jpg\" },\n  { url: \"images/DuckEggBread.jpg\"},\n  { url: \"images/OwlCake.jpg\" },\n  { url: \"images/OwlCookies.jpg\" },\n  { url: \"images/PeanutButter.jpg\" },\n  { url: \"images/SnowCake.jpg\"},\n  { url: \"images/SpaCake.jpg\" }\n];\n\nconst Home = () => {\n  return (\n    <div className=\"containerItems\">\n      Duck Egg Bakery\n      <div className=\"blockquote\">My goal is to create beautiful cookies, cakes, and breads for any occasion you have.\n      </div> \n      <div>Contact Information: Margaret Calkins\n        Email: mcalkins7613@gmail.com\n      </div>\n      <SimpleImageSlider\n        width={1000}\n        height={1000}\n        images={images}\n        slideDuration={0.5}\n        autoPlay={true}\n      />\n      <Cart />\n    </div>\n  );\n};\n\n\n\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        \n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">  \n      <h2>Our Products: </h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\n\nconst Items = () => {\n  return (\n    <div className=\"containerItems\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n   \n    </div>\n  );\n};\n\nexport default Items;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/Items\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport Logo from \"../assets/color/logo.jpg\"\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container\" style={{ backgroundImage: `url(${Logo})`, height: \"1000px\"}}>\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\nimport Logo from \"../assets/color/logo.jpg\"\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\" style={{ backgroundImage: `url(${Logo})`, height: \"1000px\"}}>\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../../assets/color/logo.jpg\"\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-3\">\n            <Link to=\"/Items\">\n              Shop Now !!!\n            </Link>\n          </li><li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <li className=\"flex-row\" >\n           <li className=\"mx-3\">\n            <Link to=\"/Items\">\n              Shop Now !!!\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/\">\n              About Me\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </li>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row\">\n      <h1>  \n        <Link to=\"/\">\n        <img src={Logo} style={{ width: \"12.5%\" }} alt=\"test\"/>\n        </Link>\n      </h1>\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\nimport Logo from \"../assets/color/logo.jpg\"\nimport Cart from \"../components/Cart\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\" style={{ backgroundImage: `url(${Logo})`, height: \"1000px\"}}>\n        <Link to=\"/Items\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n      <Cart />\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Items from './pages/Items';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/Items\" component={Items} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}